### YamlMime:ManagedReference
items:
- uid: BOOSE_GUI.AppParser
  commentId: T:BOOSE_GUI.AppParser
  id: AppParser
  parent: BOOSE_GUI
  children:
  - BOOSE_GUI.AppParser.#ctor(BOOSE.CommandFactory,BOOSE.StoredProgram)
  - BOOSE_GUI.AppParser.ParseProgram(System.String)
  langs:
  - csharp
  - vb
  name: AppParser
  nameWithType: AppParser
  fullName: BOOSE_GUI.AppParser
  type: Class
  source:
    id: AppParser
    path: C:\Users\Al\source\repos\ase-boose-assignment-Mister-Al-123\main\Components\CanvasTools\AppParser.cs
    startLine: 13
  assemblies:
  - BOOSE_GUI
  namespace: BOOSE_GUI
  summary: "\nTakes the string and splits it by newline and sends each line to be checked and executed\nExtends BOOSE Parser to remove the restrictions\n"
  example: []
  syntax:
    content: 'public class AppParser : Parser, IParser'
    content.vb: >-
      Public Class AppParser
          Inherits Parser
          Implements IParser
  inheritance:
  - System.Object
  - BOOSE.Parser
  implements:
  - BOOSE.IParser
  inheritedMembers:
  - BOOSE.Parser.ParseCommand(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BOOSE_GUI.AppParser.#ctor(BOOSE.CommandFactory,BOOSE.StoredProgram)
  commentId: M:BOOSE_GUI.AppParser.#ctor(BOOSE.CommandFactory,BOOSE.StoredProgram)
  id: '#ctor(BOOSE.CommandFactory,BOOSE.StoredProgram)'
  parent: BOOSE_GUI.AppParser
  langs:
  - csharp
  - vb
  name: AppParser(CommandFactory, StoredProgram)
  nameWithType: AppParser.AppParser(CommandFactory, StoredProgram)
  fullName: BOOSE_GUI.AppParser.AppParser(BOOSE.CommandFactory, BOOSE.StoredProgram)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\Al\source\repos\ase-boose-assignment-Mister-Al-123\main\Components\CanvasTools\AppParser.cs
    startLine: 20
  assemblies:
  - BOOSE_GUI
  namespace: BOOSE_GUI
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public AppParser(CommandFactory Factory, StoredProgram Program)
    parameters:
    - id: Factory
      type: BOOSE.CommandFactory
      description: ''
    - id: Program
      type: BOOSE.StoredProgram
      description: ''
    content.vb: Public Sub New(Factory As CommandFactory, Program As StoredProgram)
  overload: BOOSE_GUI.AppParser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BOOSE_GUI.AppParser.ParseProgram(System.String)
  commentId: M:BOOSE_GUI.AppParser.ParseProgram(System.String)
  id: ParseProgram(System.String)
  parent: BOOSE_GUI.AppParser
  langs:
  - csharp
  - vb
  name: ParseProgram(String)
  nameWithType: AppParser.ParseProgram(String)
  fullName: BOOSE_GUI.AppParser.ParseProgram(System.String)
  type: Method
  source:
    id: ParseProgram
    path: C:\Users\Al\source\repos\ase-boose-assignment-Mister-Al-123\main\Components\CanvasTools\AppParser.cs
    startLine: 29
  assemblies:
  - BOOSE_GUI
  namespace: BOOSE_GUI
  summary: "\nSplits the line by new line to then parse each command to be ready to run\nGoes through each compile method to validate the input\nWill take each error that the parser and put it into a string to output to the debug box\n"
  example: []
  syntax:
    content: public override void ParseProgram(string program)
    parameters:
    - id: program
      type: System.String
      description: The string containing the program that was entered into the text box (Or inserted into a string and passed in the test classes)
    content.vb: Public Overrides Sub ParseProgram(program As String)
  overridden: BOOSE.Parser.ParseProgram(System.String)
  overload: BOOSE_GUI.AppParser.ParseProgram*
  exceptions:
  - type: BOOSE.ParserException
    commentId: T:BOOSE.ParserException
    description: Will return parser
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: BOOSE_GUI
  commentId: N:BOOSE_GUI
  name: BOOSE_GUI
  nameWithType: BOOSE_GUI
  fullName: BOOSE_GUI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BOOSE.Parser
  commentId: T:BOOSE.Parser
  parent: BOOSE
  isExternal: true
  name: Parser
  nameWithType: Parser
  fullName: BOOSE.Parser
- uid: BOOSE.IParser
  commentId: T:BOOSE.IParser
  parent: BOOSE
  isExternal: true
  name: IParser
  nameWithType: IParser
  fullName: BOOSE.IParser
- uid: BOOSE.Parser.ParseCommand(System.String)
  commentId: M:BOOSE.Parser.ParseCommand(System.String)
  parent: BOOSE.Parser
  isExternal: true
  name: ParseCommand(String)
  nameWithType: Parser.ParseCommand(String)
  fullName: BOOSE.Parser.ParseCommand(System.String)
  spec.csharp:
  - uid: BOOSE.Parser.ParseCommand(System.String)
    name: ParseCommand
    nameWithType: Parser.ParseCommand
    fullName: BOOSE.Parser.ParseCommand
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BOOSE.Parser.ParseCommand(System.String)
    name: ParseCommand
    nameWithType: Parser.ParseCommand
    fullName: BOOSE.Parser.ParseCommand
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BOOSE
  commentId: N:BOOSE
  isExternal: true
  name: BOOSE
  nameWithType: BOOSE
  fullName: BOOSE
- uid: BOOSE_GUI.AppParser.#ctor*
  commentId: Overload:BOOSE_GUI.AppParser.#ctor
  name: AppParser
  nameWithType: AppParser.AppParser
  fullName: BOOSE_GUI.AppParser.AppParser
- uid: BOOSE.CommandFactory
  commentId: T:BOOSE.CommandFactory
  parent: BOOSE
  isExternal: true
  name: CommandFactory
  nameWithType: CommandFactory
  fullName: BOOSE.CommandFactory
- uid: BOOSE.StoredProgram
  commentId: T:BOOSE.StoredProgram
  parent: BOOSE
  isExternal: true
  name: StoredProgram
  nameWithType: StoredProgram
  fullName: BOOSE.StoredProgram
- uid: BOOSE.ParserException
  commentId: T:BOOSE.ParserException
  isExternal: true
- uid: BOOSE.Parser.ParseProgram(System.String)
  commentId: M:BOOSE.Parser.ParseProgram(System.String)
  parent: BOOSE.Parser
  isExternal: true
  name: ParseProgram(String)
  nameWithType: Parser.ParseProgram(String)
  fullName: BOOSE.Parser.ParseProgram(System.String)
  spec.csharp:
  - uid: BOOSE.Parser.ParseProgram(System.String)
    name: ParseProgram
    nameWithType: Parser.ParseProgram
    fullName: BOOSE.Parser.ParseProgram
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BOOSE.Parser.ParseProgram(System.String)
    name: ParseProgram
    nameWithType: Parser.ParseProgram
    fullName: BOOSE.Parser.ParseProgram
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BOOSE_GUI.AppParser.ParseProgram*
  commentId: Overload:BOOSE_GUI.AppParser.ParseProgram
  name: ParseProgram
  nameWithType: AppParser.ParseProgram
  fullName: BOOSE_GUI.AppParser.ParseProgram
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
