### YamlMime:ManagedReference
items:
- uid: BOOSE_GUI.AppArray
  commentId: T:BOOSE_GUI.AppArray
  id: AppArray
  parent: BOOSE_GUI
  children:
  - BOOSE_GUI.AppArray.#ctor
  - BOOSE_GUI.AppArray.arrayType
  - BOOSE_GUI.AppArray.charArray
  - BOOSE_GUI.AppArray.columns
  - BOOSE_GUI.AppArray.Compile
  - BOOSE_GUI.AppArray.Execute
  - BOOSE_GUI.AppArray.intArray
  - BOOSE_GUI.AppArray.realArray
  - BOOSE_GUI.AppArray.rows
  - BOOSE_GUI.AppArray.typeSupport
  langs:
  - csharp
  - vb
  name: AppArray
  nameWithType: AppArray
  fullName: BOOSE_GUI.AppArray
  type: Class
  source:
    id: AppArray
    path: C:\Users\Al\source\repos\ase-boose-assignment-Mister-Al-123\main\Components\DataTypes\AppArray.cs
    startLine: 14
  assemblies:
  - BOOSE_GUI
  namespace: BOOSE_GUI
  summary: "\nThe array class for the canvas\n"
  example: []
  syntax:
    content: 'public class AppArray : Evaluation, ICommand'
    content.vb: >-
      Public Class AppArray
          Inherits Evaluation
          Implements ICommand
  inheritance:
  - System.Object
  - BOOSE.Command
  - BOOSE.Evaluation
  implements:
  - BOOSE.ICommand
  inheritedMembers:
  - BOOSE.Evaluation.expression
  - BOOSE.Evaluation.evaluatedExpression
  - BOOSE.Evaluation.varName
  - BOOSE.Evaluation.value
  - BOOSE.Evaluation.CheckParameters(System.String[])
  - BOOSE.Evaluation.ProcessExpression(System.String)
  - BOOSE.Evaluation.Expression
  - BOOSE.Evaluation.VarName
  - BOOSE.Evaluation.Value
  - BOOSE.Evaluation.Local
  - BOOSE.Command.program
  - BOOSE.Command.parameterList
  - BOOSE.Command.parameters
  - BOOSE.Command.paramsint
  - BOOSE.Command.Set(BOOSE.StoredProgram,System.String)
  - BOOSE.Command.ProcessParameters(System.String)
  - BOOSE.Command.ToString
  - BOOSE.Command.Program
  - BOOSE.Command.Name
  - BOOSE.Command.ParameterList
  - BOOSE.Command.Parameters
  - BOOSE.Command.Paramsint
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BOOSE_GUI.AppArray.arrayType
  commentId: F:BOOSE_GUI.AppArray.arrayType
  id: arrayType
  parent: BOOSE_GUI.AppArray
  langs:
  - csharp
  - vb
  name: arrayType
  nameWithType: AppArray.arrayType
  fullName: BOOSE_GUI.AppArray.arrayType
  type: Field
  source:
    id: arrayType
    path: C:\Users\Al\source\repos\ase-boose-assignment-Mister-Al-123\main\Components\DataTypes\AppArray.cs
    startLine: 19
  assemblies:
  - BOOSE_GUI
  namespace: BOOSE_GUI
  summary: "\nString to hold the parameter declaring the data type for the array\n"
  example: []
  syntax:
    content: public string arrayType
    return:
      type: System.String
    content.vb: Public arrayType As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BOOSE_GUI.AppArray.typeSupport
  commentId: F:BOOSE_GUI.AppArray.typeSupport
  id: typeSupport
  parent: BOOSE_GUI.AppArray
  langs:
  - csharp
  - vb
  name: typeSupport
  nameWithType: AppArray.typeSupport
  fullName: BOOSE_GUI.AppArray.typeSupport
  type: Field
  source:
    id: typeSupport
    path: C:\Users\Al\source\repos\ase-boose-assignment-Mister-Al-123\main\Components\DataTypes\AppArray.cs
    startLine: 23
  assemblies:
  - BOOSE_GUI
  namespace: BOOSE_GUI
  summary: "\nA list of supported data types that Compile() will match the arrayType parameter against\n"
  example: []
  syntax:
    content: protected string[] typeSupport
    return:
      type: System.String[]
    content.vb: Protected typeSupport As String()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BOOSE_GUI.AppArray.rows
  commentId: F:BOOSE_GUI.AppArray.rows
  id: rows
  parent: BOOSE_GUI.AppArray
  langs:
  - csharp
  - vb
  name: rows
  nameWithType: AppArray.rows
  fullName: BOOSE_GUI.AppArray.rows
  type: Field
  source:
    id: rows
    path: C:\Users\Al\source\repos\ase-boose-assignment-Mister-Al-123\main\Components\DataTypes\AppArray.cs
    startLine: 28
  assemblies:
  - BOOSE_GUI
  namespace: BOOSE_GUI
  summary: "\nNumber of rows that the new array will have\n"
  example: []
  syntax:
    content: protected int rows
    return:
      type: System.Int32
    content.vb: Protected rows As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BOOSE_GUI.AppArray.columns
  commentId: F:BOOSE_GUI.AppArray.columns
  id: columns
  parent: BOOSE_GUI.AppArray
  langs:
  - csharp
  - vb
  name: columns
  nameWithType: AppArray.columns
  fullName: BOOSE_GUI.AppArray.columns
  type: Field
  source:
    id: columns
    path: C:\Users\Al\source\repos\ase-boose-assignment-Mister-Al-123\main\Components\DataTypes\AppArray.cs
    startLine: 33
  assemblies:
  - BOOSE_GUI
  namespace: BOOSE_GUI
  summary: "\nNumber of columns that the array will have\nDefaults to 1 if just a 1D array is being made\n"
  example: []
  syntax:
    content: protected int columns
    return:
      type: System.Int32
    content.vb: Protected columns As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BOOSE_GUI.AppArray.intArray
  commentId: F:BOOSE_GUI.AppArray.intArray
  id: intArray
  parent: BOOSE_GUI.AppArray
  langs:
  - csharp
  - vb
  name: intArray
  nameWithType: AppArray.intArray
  fullName: BOOSE_GUI.AppArray.intArray
  type: Field
  source:
    id: intArray
    path: C:\Users\Al\source\repos\ase-boose-assignment-Mister-Al-123\main\Components\DataTypes\AppArray.cs
    startLine: 38
  assemblies:
  - BOOSE_GUI
  namespace: BOOSE_GUI
  summary: "\nVariable where, if the array type is an int, the new array will be stored\n"
  example: []
  syntax:
    content: public int[, ] intArray
    return:
      type: System.Int32[,]
    content.vb: Public intArray As Integer(,)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BOOSE_GUI.AppArray.realArray
  commentId: F:BOOSE_GUI.AppArray.realArray
  id: realArray
  parent: BOOSE_GUI.AppArray
  langs:
  - csharp
  - vb
  name: realArray
  nameWithType: AppArray.realArray
  fullName: BOOSE_GUI.AppArray.realArray
  type: Field
  source:
    id: realArray
    path: C:\Users\Al\source\repos\ase-boose-assignment-Mister-Al-123\main\Components\DataTypes\AppArray.cs
    startLine: 42
  assemblies:
  - BOOSE_GUI
  namespace: BOOSE_GUI
  summary: "\nVariable where, if the array type is a float, the new array will be stored\n"
  example: []
  syntax:
    content: public double[, ] realArray
    return:
      type: System.Double[,]
    content.vb: Public realArray As Double(,)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BOOSE_GUI.AppArray.charArray
  commentId: F:BOOSE_GUI.AppArray.charArray
  id: charArray
  parent: BOOSE_GUI.AppArray
  langs:
  - csharp
  - vb
  name: charArray
  nameWithType: AppArray.charArray
  fullName: BOOSE_GUI.AppArray.charArray
  type: Field
  source:
    id: charArray
    path: C:\Users\Al\source\repos\ase-boose-assignment-Mister-Al-123\main\Components\DataTypes\AppArray.cs
    startLine: 46
  assemblies:
  - BOOSE_GUI
  namespace: BOOSE_GUI
  summary: "\nVariable where, if the array type is a char, the new array will be stored\n"
  example: []
  syntax:
    content: public char[, ] charArray
    return:
      type: System.Char[,]
    content.vb: Public charArray As Char(,)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BOOSE_GUI.AppArray.#ctor
  commentId: M:BOOSE_GUI.AppArray.#ctor
  id: '#ctor'
  parent: BOOSE_GUI.AppArray
  langs:
  - csharp
  - vb
  name: AppArray()
  nameWithType: AppArray.AppArray()
  fullName: BOOSE_GUI.AppArray.AppArray()
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\Al\source\repos\ase-boose-assignment-Mister-Al-123\main\Components\DataTypes\AppArray.cs
    startLine: 51
  assemblies:
  - BOOSE_GUI
  namespace: BOOSE_GUI
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public AppArray()
    content.vb: Public Sub New
  overload: BOOSE_GUI.AppArray.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BOOSE_GUI.AppArray.Compile
  commentId: M:BOOSE_GUI.AppArray.Compile
  id: Compile
  parent: BOOSE_GUI.AppArray
  langs:
  - csharp
  - vb
  name: Compile()
  nameWithType: AppArray.Compile()
  fullName: BOOSE_GUI.AppArray.Compile()
  type: Method
  source:
    id: Compile
    path: C:\Users\Al\source\repos\ase-boose-assignment-Mister-Al-123\main\Components\DataTypes\AppArray.cs
    startLine: 59
  assemblies:
  - BOOSE_GUI
  namespace: BOOSE_GUI
  summary: "\nChecks for correct syntax and creates the variable to hold the new array\n"
  example: []
  syntax:
    content: public override void Compile()
    content.vb: Public Overrides Sub Compile
  overridden: BOOSE.Evaluation.Compile
  overload: BOOSE_GUI.AppArray.Compile*
  exceptions:
  - type: BOOSE.CommandException
    commentId: T:BOOSE.CommandException
    description: "\nReturns exception when either wrong type or number of parameters are given\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BOOSE_GUI.AppArray.Execute
  commentId: M:BOOSE_GUI.AppArray.Execute
  id: Execute
  parent: BOOSE_GUI.AppArray
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: AppArray.Execute()
  fullName: BOOSE_GUI.AppArray.Execute()
  type: Method
  source:
    id: Execute
    path: C:\Users\Al\source\repos\ase-boose-assignment-Mister-Al-123\main\Components\DataTypes\AppArray.cs
    startLine: 95
  assemblies:
  - BOOSE_GUI
  namespace: BOOSE_GUI
  summary: "\nCreates the array called by the stored program and holds it inside the variable created in compile\nAlso does a last check for correct typing\n"
  example: []
  syntax:
    content: public override void Execute()
    content.vb: Public Overrides Sub Execute
  overridden: BOOSE.Evaluation.Execute
  overload: BOOSE_GUI.AppArray.Execute*
  exceptions:
  - type: BOOSE.CommandException
    commentId: T:BOOSE.CommandException
    description: "\nWill throw an exception if, somehow, the typing is incorrect\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: BOOSE_GUI
  commentId: N:BOOSE_GUI
  name: BOOSE_GUI
  nameWithType: BOOSE_GUI
  fullName: BOOSE_GUI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BOOSE.Command
  commentId: T:BOOSE.Command
  parent: BOOSE
  isExternal: true
  name: Command
  nameWithType: Command
  fullName: BOOSE.Command
- uid: BOOSE.Evaluation
  commentId: T:BOOSE.Evaluation
  parent: BOOSE
  isExternal: true
  name: Evaluation
  nameWithType: Evaluation
  fullName: BOOSE.Evaluation
- uid: BOOSE.ICommand
  commentId: T:BOOSE.ICommand
  parent: BOOSE
  isExternal: true
  name: ICommand
  nameWithType: ICommand
  fullName: BOOSE.ICommand
- uid: BOOSE.Evaluation.expression
  commentId: F:BOOSE.Evaluation.expression
  parent: BOOSE.Evaluation
  isExternal: true
  name: expression
  nameWithType: Evaluation.expression
  fullName: BOOSE.Evaluation.expression
- uid: BOOSE.Evaluation.evaluatedExpression
  commentId: F:BOOSE.Evaluation.evaluatedExpression
  parent: BOOSE.Evaluation
  isExternal: true
  name: evaluatedExpression
  nameWithType: Evaluation.evaluatedExpression
  fullName: BOOSE.Evaluation.evaluatedExpression
- uid: BOOSE.Evaluation.varName
  commentId: F:BOOSE.Evaluation.varName
  parent: BOOSE.Evaluation
  isExternal: true
  name: varName
  nameWithType: Evaluation.varName
  fullName: BOOSE.Evaluation.varName
- uid: BOOSE.Evaluation.value
  commentId: F:BOOSE.Evaluation.value
  parent: BOOSE.Evaluation
  isExternal: true
  name: value
  nameWithType: Evaluation.value
  fullName: BOOSE.Evaluation.value
- uid: BOOSE.Evaluation.CheckParameters(System.String[])
  commentId: M:BOOSE.Evaluation.CheckParameters(System.String[])
  parent: BOOSE.Evaluation
  isExternal: true
  name: CheckParameters(String[])
  nameWithType: Evaluation.CheckParameters(String[])
  fullName: BOOSE.Evaluation.CheckParameters(System.String[])
  nameWithType.vb: Evaluation.CheckParameters(String())
  fullName.vb: BOOSE.Evaluation.CheckParameters(System.String())
  name.vb: CheckParameters(String())
  spec.csharp:
  - uid: BOOSE.Evaluation.CheckParameters(System.String[])
    name: CheckParameters
    nameWithType: Evaluation.CheckParameters
    fullName: BOOSE.Evaluation.CheckParameters
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BOOSE.Evaluation.CheckParameters(System.String[])
    name: CheckParameters
    nameWithType: Evaluation.CheckParameters
    fullName: BOOSE.Evaluation.CheckParameters
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BOOSE.Evaluation.ProcessExpression(System.String)
  commentId: M:BOOSE.Evaluation.ProcessExpression(System.String)
  parent: BOOSE.Evaluation
  isExternal: true
  name: ProcessExpression(String)
  nameWithType: Evaluation.ProcessExpression(String)
  fullName: BOOSE.Evaluation.ProcessExpression(System.String)
  spec.csharp:
  - uid: BOOSE.Evaluation.ProcessExpression(System.String)
    name: ProcessExpression
    nameWithType: Evaluation.ProcessExpression
    fullName: BOOSE.Evaluation.ProcessExpression
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BOOSE.Evaluation.ProcessExpression(System.String)
    name: ProcessExpression
    nameWithType: Evaluation.ProcessExpression
    fullName: BOOSE.Evaluation.ProcessExpression
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BOOSE.Evaluation.Expression
  commentId: P:BOOSE.Evaluation.Expression
  parent: BOOSE.Evaluation
  isExternal: true
  name: Expression
  nameWithType: Evaluation.Expression
  fullName: BOOSE.Evaluation.Expression
- uid: BOOSE.Evaluation.VarName
  commentId: P:BOOSE.Evaluation.VarName
  parent: BOOSE.Evaluation
  isExternal: true
  name: VarName
  nameWithType: Evaluation.VarName
  fullName: BOOSE.Evaluation.VarName
- uid: BOOSE.Evaluation.Value
  commentId: P:BOOSE.Evaluation.Value
  parent: BOOSE.Evaluation
  isExternal: true
  name: Value
  nameWithType: Evaluation.Value
  fullName: BOOSE.Evaluation.Value
- uid: BOOSE.Evaluation.Local
  commentId: P:BOOSE.Evaluation.Local
  parent: BOOSE.Evaluation
  isExternal: true
  name: Local
  nameWithType: Evaluation.Local
  fullName: BOOSE.Evaluation.Local
- uid: BOOSE.Command.program
  commentId: F:BOOSE.Command.program
  parent: BOOSE.Command
  isExternal: true
  name: program
  nameWithType: Command.program
  fullName: BOOSE.Command.program
- uid: BOOSE.Command.parameterList
  commentId: F:BOOSE.Command.parameterList
  parent: BOOSE.Command
  isExternal: true
  name: parameterList
  nameWithType: Command.parameterList
  fullName: BOOSE.Command.parameterList
- uid: BOOSE.Command.parameters
  commentId: F:BOOSE.Command.parameters
  parent: BOOSE.Command
  isExternal: true
  name: parameters
  nameWithType: Command.parameters
  fullName: BOOSE.Command.parameters
- uid: BOOSE.Command.paramsint
  commentId: F:BOOSE.Command.paramsint
  parent: BOOSE.Command
  isExternal: true
  name: paramsint
  nameWithType: Command.paramsint
  fullName: BOOSE.Command.paramsint
- uid: BOOSE.Command.Set(BOOSE.StoredProgram,System.String)
  commentId: M:BOOSE.Command.Set(BOOSE.StoredProgram,System.String)
  parent: BOOSE.Command
  isExternal: true
  name: Set(StoredProgram, String)
  nameWithType: Command.Set(StoredProgram, String)
  fullName: BOOSE.Command.Set(BOOSE.StoredProgram, System.String)
  spec.csharp:
  - uid: BOOSE.Command.Set(BOOSE.StoredProgram,System.String)
    name: Set
    nameWithType: Command.Set
    fullName: BOOSE.Command.Set
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BOOSE.StoredProgram
    name: StoredProgram
    nameWithType: StoredProgram
    fullName: BOOSE.StoredProgram
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BOOSE.Command.Set(BOOSE.StoredProgram,System.String)
    name: Set
    nameWithType: Command.Set
    fullName: BOOSE.Command.Set
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BOOSE.StoredProgram
    name: StoredProgram
    nameWithType: StoredProgram
    fullName: BOOSE.StoredProgram
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BOOSE.Command.ProcessParameters(System.String)
  commentId: M:BOOSE.Command.ProcessParameters(System.String)
  parent: BOOSE.Command
  isExternal: true
  name: ProcessParameters(String)
  nameWithType: Command.ProcessParameters(String)
  fullName: BOOSE.Command.ProcessParameters(System.String)
  spec.csharp:
  - uid: BOOSE.Command.ProcessParameters(System.String)
    name: ProcessParameters
    nameWithType: Command.ProcessParameters
    fullName: BOOSE.Command.ProcessParameters
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BOOSE.Command.ProcessParameters(System.String)
    name: ProcessParameters
    nameWithType: Command.ProcessParameters
    fullName: BOOSE.Command.ProcessParameters
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BOOSE.Command.ToString
  commentId: M:BOOSE.Command.ToString
  parent: BOOSE.Command
  isExternal: true
  name: ToString()
  nameWithType: Command.ToString()
  fullName: BOOSE.Command.ToString()
  spec.csharp:
  - uid: BOOSE.Command.ToString
    name: ToString
    nameWithType: Command.ToString
    fullName: BOOSE.Command.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BOOSE.Command.ToString
    name: ToString
    nameWithType: Command.ToString
    fullName: BOOSE.Command.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BOOSE.Command.Program
  commentId: P:BOOSE.Command.Program
  parent: BOOSE.Command
  isExternal: true
  name: Program
  nameWithType: Command.Program
  fullName: BOOSE.Command.Program
- uid: BOOSE.Command.Name
  commentId: P:BOOSE.Command.Name
  parent: BOOSE.Command
  isExternal: true
  name: Name
  nameWithType: Command.Name
  fullName: BOOSE.Command.Name
- uid: BOOSE.Command.ParameterList
  commentId: P:BOOSE.Command.ParameterList
  parent: BOOSE.Command
  isExternal: true
  name: ParameterList
  nameWithType: Command.ParameterList
  fullName: BOOSE.Command.ParameterList
- uid: BOOSE.Command.Parameters
  commentId: P:BOOSE.Command.Parameters
  parent: BOOSE.Command
  isExternal: true
  name: Parameters
  nameWithType: Command.Parameters
  fullName: BOOSE.Command.Parameters
- uid: BOOSE.Command.Paramsint
  commentId: P:BOOSE.Command.Paramsint
  parent: BOOSE.Command
  isExternal: true
  name: Paramsint
  nameWithType: Command.Paramsint
  fullName: BOOSE.Command.Paramsint
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BOOSE
  commentId: N:BOOSE
  isExternal: true
  name: BOOSE
  nameWithType: BOOSE
  fullName: BOOSE
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32[,]
  isExternal: true
  name: Int32[,]
  nameWithType: Int32[,]
  fullName: System.Int32[,]
  nameWithType.vb: Int32(,)
  fullName.vb: System.Int32(,)
  name.vb: Int32(,)
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: System.Double[,]
  isExternal: true
  name: Double[,]
  nameWithType: Double[,]
  fullName: System.Double[,]
  nameWithType.vb: Double(,)
  fullName.vb: System.Double(,)
  name.vb: Double(,)
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: System.Char[,]
  isExternal: true
  name: Char[,]
  nameWithType: Char[,]
  fullName: System.Char[,]
  nameWithType.vb: Char(,)
  fullName.vb: System.Char(,)
  name.vb: Char(,)
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: BOOSE_GUI.AppArray.#ctor*
  commentId: Overload:BOOSE_GUI.AppArray.#ctor
  name: AppArray
  nameWithType: AppArray.AppArray
  fullName: BOOSE_GUI.AppArray.AppArray
- uid: BOOSE.CommandException
  commentId: T:BOOSE.CommandException
  isExternal: true
- uid: BOOSE.Evaluation.Compile
  commentId: M:BOOSE.Evaluation.Compile
  parent: BOOSE.Evaluation
  isExternal: true
  name: Compile()
  nameWithType: Evaluation.Compile()
  fullName: BOOSE.Evaluation.Compile()
  spec.csharp:
  - uid: BOOSE.Evaluation.Compile
    name: Compile
    nameWithType: Evaluation.Compile
    fullName: BOOSE.Evaluation.Compile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BOOSE.Evaluation.Compile
    name: Compile
    nameWithType: Evaluation.Compile
    fullName: BOOSE.Evaluation.Compile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BOOSE_GUI.AppArray.Compile*
  commentId: Overload:BOOSE_GUI.AppArray.Compile
  name: Compile
  nameWithType: AppArray.Compile
  fullName: BOOSE_GUI.AppArray.Compile
- uid: BOOSE.Evaluation.Execute
  commentId: M:BOOSE.Evaluation.Execute
  parent: BOOSE.Evaluation
  isExternal: true
  name: Execute()
  nameWithType: Evaluation.Execute()
  fullName: BOOSE.Evaluation.Execute()
  spec.csharp:
  - uid: BOOSE.Evaluation.Execute
    name: Execute
    nameWithType: Evaluation.Execute
    fullName: BOOSE.Evaluation.Execute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BOOSE.Evaluation.Execute
    name: Execute
    nameWithType: Evaluation.Execute
    fullName: BOOSE.Evaluation.Execute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BOOSE_GUI.AppArray.Execute*
  commentId: Overload:BOOSE_GUI.AppArray.Execute
  name: Execute
  nameWithType: AppArray.Execute
  fullName: BOOSE_GUI.AppArray.Execute
